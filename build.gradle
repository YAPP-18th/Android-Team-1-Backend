plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.liquibase.gradle' version '2.0.4'
}

bootJar {
	enabled = false
}
jar {
	enabled = true
}

repositories {
	mavenCentral()
}

allprojects {
	group 'net.mureng'
	version '0.0.1-SNAPSHOT'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	sourceCompatibility = '11'

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.h2database:h2'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.dbunit:dbunit:2.6.0'
		testImplementation 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
		implementation 'mysql:mysql-connector-java'
		implementation 'org.mapstruct:mapstruct:1.4.2.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
		implementation 'org.liquibase:liquibase-core:4.3.5'
		implementation 'com.google.firebase:firebase-admin:6.8.1'
	}

	test {
		useJUnitPlatform()
		finalizedBy 'jacocoTestReport'
	}

	jacocoTestReport {
		reports {
			html.destination file("${buildDir}/jacocoHtml")
			csv.enabled false
			xml.enabled false
		}

		finalizedBy 'jacocoTestCoverageVerification'
	}

	jacocoTestCoverageVerification {
		violationRules {
			rule {
				enabled = true
				element = 'CLASS'

				limit {
					counter = 'LINE'
					value = 'COVEREDRATIO'
					minimum = 0.00
				}

				excludes = []
			}

		}
	}
}

project(':mureng-api') {
	dependencies {
		compile project(":mureng-core")
		testCompile project(':mureng-core').sourceSets.test.output

		implementation 'org.springframework.cloud:spring-cloud-aws-context:2.2.1.RELEASE'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'io.springfox:springfox-swagger2:2.9.2'
		implementation 'io.springfox:springfox-swagger-ui:2.9.2'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation 'org.springframework.security:spring-security-test'
	}
}

project(':mureng-batch') {
	dependencies {
		compile project(':mureng-core')
		testCompile project(':mureng-core').sourceSets.test.output

		implementation 'org.springframework.boot:spring-boot-starter-quartz'
		implementation 'org.springframework.boot:spring-boot-starter-batch'
		implementation 'com.mchange:c3p0'
		testImplementation 'org.springframework.batch:spring-batch-test'
	}
}

dependencies {
	liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
	liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'
	liquibaseRuntime 'mysql:mysql-connector-java:8.0.22'
	liquibaseRuntime 'com.h2database:h2'
	liquibaseRuntime group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
}

task dbMigration {
	def props = project.getProperties()

	liquibase {
		activities {
			main {
				changeLogFile "mureng-core/src/main/resources/config/liquibase/master.xml"
				classpath "$projectDir/mureng-core/src/main/resources/"
//					url "jdbc:h2:mem:testdb"
//					username "sa"
//					password ""
				url props.url
				username props.username
				password props.password
			}
		}
	}
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}